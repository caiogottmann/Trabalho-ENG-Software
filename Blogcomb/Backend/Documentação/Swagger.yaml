swagger: '2.0'
info:
  description: |
    This is a sample Blogcomb server.  You can find 
    out more about Swagger at 
    [http://swagger.io](http://swagger.io) or on 
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: 1.0.0
  title: Blogcomb
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: Blogcomb.swagger.io
# basePath: /v2
tags:
- name: email
  description: Everything about your emails
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: Post
  description: Access to emailPost orders
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our Post
    url: http://swagger.io
# schemes:
# - http
paths:
  /email:
    post:
      tags:
      - email
      summary: Adiciona um novo email
      operationId: addemail
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: email object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Email'
      responses:
        200:
          description: Email cadastrado com sucesso
        500:
          description: Erro ao criar email
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
    get:
      tags:
      - email
      summary: Retorna todo os emails
      operationId: getemail
      produces:
      - application/json
      - application/xml
      responses:
        200:
          description: sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/Email'
        400:
          description: Não foi possível exibir os dados, tente novamente
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
  /email/edit:
    post:
      tags:
      - email
      summary: Edit email
      description: Email to be updated
      operationId: updateEmail
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: Email
        in: body
        description: Email with edited fields
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Email'
          
      responses:
        200:
          description: Email alterado com sucesso
        404:
          description: Email não encontrado
        500:
          description: Erro ao alterar email
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
  /email/:emailsId:
    delete:
      tags:
      - email
      summary: Deletes a email
      operationId: deletemail
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: emailId
        in: path
        description: email id to delete
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Removido com sucesso
        400:
          description: Não foi possível remover o email, tente novamente
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
  /Post:
    post:
      tags:
      - Post
      summary: Adiciona um novo post
      operationId: addpost
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: post object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        200:
          description: Post cadastrado com sucesso
        405:
          description: Falha ao cadastrar post
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
    get:
      tags:
      - Post
      summary: Retorna todo os posts
      operationId: getpost
      produces:
      - application/json
      - application/xml
      responses:
        200:
          description: sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
        500:
          description: Não foi possível exibir os dados, tente novamente
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
  /Post/edit:
    post:
      tags:
      - Post
      summary: Edit post
      description: post to be updated
      operationId: updatepost
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: Email
        in: body
        description: post with edited fields
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Post'
      responses:
        200:
          description: Post alterado com sucesso
        404:
          description: Post não encontrado
        500:
          description: Erro ao alterar Post
  /Post/:postsId:
    get:
      tags:
      - Post
      summary: find a post
      operationId: findpost
      produces:
      - application/json
      - application/xml
      parameters:
      - name: postId
        in: path
        description: post id
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: sucesso
          schema:
              $ref: '#/definitions/Post'
        400:
          description: Não foi possível exibir os dados, tente novamente
    delete:
      tags:
      - Post
      summary: Deletes a post
      operationId: deletpost
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: postId
        in: path
        description: post id to delete
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Removido com sucesso
        400:
          description: Não foi possível remover o post, tente novamente
      security:
      - emailstore_auth:
        - write:emails
        - read:emails
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:emails: modify emails in your account
      read:emails: read your emails
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Email:
    type: object
    required:
    - nome
    - email
    properties:
      id:
        type: integer
        format: int64

      name:
        type: string
      email:
        type: string

    xml:
      name: Email
  Post:
    type: object
    required:
    - titulo
    - texto
    - data
    - tag
    - creator
    properties:
      id:
        type: integer
        format: int64
      titulo:
        type: string
      texto:
        type: string
      data:
        type: string
        format: date
      tag:
        type: array
        items:
          type: string
          format: int64
      creator:
        type: string
        format: int64
    xml:
      name: Post
  Tag:
    type: object
    required:
    - tag
    properties:
      id:
        type: integer
        format: int64
      tag:
        type: string

    xml:
      name: Tag
  Usuario:
    type: object
    required:
    - name
    - email
    - password
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      password:
        type: string
      Admin:
        type: number
    xml:
      name: Usuario
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: http://localhost:5000
basePath: 
schemes:
 - https
 - http